<?php

namespace Drupal\jsonld\Encoder;

use Symfony\Component\Serializer\Encoder\JsonEncoder as SymfonyJsonEncoder;

/**
 * Encodes to JSON-LD
 *
 * Simply respond to jsonld format requests using the JSON encoder.
 */
class JsonldEncoder extends SymfonyJsonEncoder {

  /**
   * The formats that this Encoder supports.
   *
   * @var string
   * @see src/JsonldServiceProvider.php
   */
  protected $format = 'jsonld';

  /**
   * @inheritDoc
   */
  public function encode($data, $format, array $context = array()) {
    //$context = parent::resolveContext($context);
    error_log('hey, encoding here');
    error_log(var_dump($data, true));
    /*$encodedJson = json_encode($data, $context['json_encode_options']);

    if (JSON_ERROR_NONE !== $this->lastError = json_last_error()) {
      throw new UnexpectedValueException(json_last_error_msg());
    }

    var_dump($encodedJson);*/
    // This is wrong: if calling parent it basically returns HAL+JSON
    return parent::encode($data, $format, $context); // TODO: Change the autogenerated stub
  }

  /**
   * {@inheritdoc}
   */
  public function supportsEncoding($format) {
    return $format == $this->format;
  }

  /**
   * {@inheritdoc}
   */
  public function supportsDecoding($format) {
    return $format == $this->format;
  }

}
